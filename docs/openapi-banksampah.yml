openapi: "3.0.2"
info:
  title: API Bank Sampah
  version: "1.0"
servers:
  - url: http://localhost:8000/api
tags:
  - name: Data pegawai
    description: Untuk mengola data pegawai
paths:
  /pegawai:
    get:
      tags:
        - Data pegawai
      summary: MENDAPATKAN data pegawai
      parameters:
        - name: id_pegawai
          in: query
          description: Menampilkan spesifik pegawai berdasarkan idnya
          schema:
            type: string
            nullable: true # Parameter bisa bernilai null (opsional)
        - name: length
          in: query
          description: Jumlah item yang akan ditampilkan
          schema:
            type: number
            nullable: true # Parameter bisa bernilai null (opsional)
        - name: start
          in: query
          description: Indeks awal data yang akan ditampilkan
          schema:
            type: number
            nullable: true # Parameter bisa bernilai null (opsional)
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  draw:
                    type: number
                  recordsTotal:
                    type: number
                  recordsFiltered:
                    type: number
                  data:
                    type: array # Perubahan: Objek data adalah array
                    items:
                      type: object
                      properties:
                        id_pegawai:
                          type: string
                        nama_pegawai:
                          type: string
                        jenis_kelamin:
                          type: string
                        status_data:
                          type: string
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
    post:
      tags:
        - Data pegawai
      summary: MENAMBAHKAN data pegawai
      requestBody:
        description: Data pegawai untuk menambahkan data pegawai
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama_pegawai:
                  type: string
                jenis_kelamin:
                  type: string
                status_data:
                  type: string
      responses:
        201:
          description: CREATED
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                errors:
                  message: "Data ... berhasil ditambahkan"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                errors:
                  message: "Data ... tidak valid"
        409:
          description: CONFLICT
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                errors:
                  message: "Data dideteksi berada di tempat sampah !! Pulihkan ?"
    put:
      tags:
        - Data pegawai
      summary: MENGUBAH data pegawai
      requestBody:
        description: Data pegawai untuk mengubah data pegawai
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_pegawai:
                  type: integer
                nama_pegawai:
                  type: string
                jenis_kelamin:
                  type: string
                status_data:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                errors:
                  message: "Data ... berhasil diubah"
        400:
          description: BAD REQUEST
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                errors:
                  message: "Data ... tidak valid"
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
        409:
          description: CONFLICT
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                errors:
                  message: "Data dideteksi berada di tempat sampah !! Pulihkan ?"
    delete:
      tags:
        - Data pegawai
      summary: MENGHAPUS data pegawai
      requestBody:
        description: Data pegawai untuk menghapus data pegawai
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_pegawai:
                  type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                errors:
                  message: "Data ... berhasil dihapus"
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
  /pegawai/pulihkan:
    put:
      tags:
        - Data pegawai
      summary: MEMULIHKAN data pegawai
      requestBody:
        description: Data pegawai untuk memulihkan data pegawai
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_pegawai:
                  type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                errors:
                  message: "Data ... berhasil dipulihkan"
        404:
          description: NOT FOUND
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: object
                    properties:
                      message:
                        type: string
              example:
                errors:
                  message: "Data dengan id ... tidak ditemukan"
